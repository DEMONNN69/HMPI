# Generated by Django 5.2.6 on 2025-09-30 12:34

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='CalculationBatch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('batch_id', models.CharField(max_length=100, unique=True)),
                ('total_samples', models.IntegerField()),
                ('processed_samples', models.IntegerField(default=0)),
                ('failed_samples', models.IntegerField(default=0)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed')], default='pending', max_length=20)),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('error_message', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Calculation Batch',
                'verbose_name_plural': 'Calculation Batches',
                'ordering': ['-started_at'],
            },
        ),
        migrations.CreateModel(
            name='ComputedIndex',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.PositiveIntegerField()),
                ('calculation_year', models.IntegerField(verbose_name='Calculation Year')),
                ('location_name', models.CharField(max_length=200, verbose_name='Location Name')),
                ('state', models.CharField(blank=True, max_length=100, null=True, verbose_name='State')),
                ('district', models.CharField(blank=True, max_length=100, null=True, verbose_name='District')),
                ('latitude', models.FloatField(blank=True, null=True, verbose_name='Latitude')),
                ('longitude', models.FloatField(blank=True, null=True, verbose_name='Longitude')),
                ('hpi_value', models.FloatField(verbose_name='Heavy Metal Pollution Index (HPI)')),
                ('hei_value', models.FloatField(blank=True, null=True, verbose_name='Heavy Metal Evaluation Index (HEI)')),
                ('cd_value', models.FloatField(blank=True, null=True, verbose_name='Degree of Contamination (Cd)')),
                ('mi_value', models.FloatField(blank=True, null=True, verbose_name='Metal Index (MI)')),
                ('quality_category', models.CharField(choices=[('excellent', 'Excellent (HPI < 25)'), ('good', 'Good (25 ≤ HPI < 50)'), ('poor', 'Poor (50 ≤ HPI < 75)'), ('very_poor', 'Very Poor (HPI ≥ 75)')], max_length=20, verbose_name='Water Quality Category')),
                ('calculation_method', models.CharField(default='WHO_2011', max_length=50, verbose_name='Calculation Method')),
                ('computed_at', models.DateTimeField(auto_now_add=True)),
                ('computed_by', models.CharField(default='FastAPI_HPICalculator', max_length=100, verbose_name='Computed By')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Calculation Notes')),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
            ],
            options={
                'verbose_name': 'Computed Index',
                'verbose_name_plural': 'Computed Indices',
                'ordering': ['-computed_at'],
                'unique_together': {('calculation_year', 'location_name', 'latitude', 'longitude'), ('content_type', 'object_id')},
            },
        ),
    ]
